/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vinhlp.form;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vinhlp.product.ProductDAO;
import vinhlp.product.ProductDTO;

/**
 *
 * @author Asus
 */
public class NewInventoryBill extends javax.swing.JFrame {

    DefaultTableModel tblModelProduct = null;
    HashMap<String, Integer> selectedProduct;
    String productName = "";
    String inOrOut;
    int availableProduct=0;

    /**
     * Creates new form NewInventoryBill
     */
    public NewInventoryBill() {
        initComponents();
        tblModelProduct = (DefaultTableModel) tblProduct.getModel();
        selectedProduct = new HashMap<>();
        loadForm();
    }

    public NewInventoryBill(HashMap<String, Integer> selectedMap, String inOut) {
        initComponents();
        tblModelProduct = (DefaultTableModel) tblProduct.getModel();
        selectedProduct = selectedMap;
        System.out.println(inOut);
        if (inOut.equals("out")) {
            chkOutStoke.setSelected(true);
        } else {
            chkInStoke.setSelected(true);
        }
        loadForm();
    }

    private void loadForm() {
        //load product
        loadProduct();
    }

    private void loadProduct() {
        ProductDAO dao = new ProductDAO();
        try {
            dao.loadProduct();
            List<ProductDTO> listAllProduct = dao.getListDTO();
            tblModelProduct.setRowCount(0);
            for (ProductDTO dto : listAllProduct) {
                tblModelProduct.addRow(dto.toVector(dto.getId()));
            }
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Load product: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkInOrOut = new javax.swing.ButtonGroup();
        chkInStoke = new javax.swing.JRadioButton();
        chkOutStoke = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        txtSearchByLikeName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnSelect = new javax.swing.JButton();
        btnViewSeletedProduct = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chkInOrOut.add(chkInStoke);
        chkInStoke.setText("In Stoke");

        chkInOrOut.add(chkOutStoke);
        chkOutStoke.setText("Out Stoke");

        jLabel1.setText("Select type for the built");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("New bill for in or out stoke");

        jLabel3.setText("Choose product:");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Price", "Category", "Quantity"
            }
        ));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        txtSearchByLikeName.setText("Search product by like name");
        txtSearchByLikeName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchByLikeNameMouseClicked(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setText("Input Quantity:");

        txtQuantity.setText("1");

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnViewSeletedProduct.setText("View Selected Product");
        btnViewSeletedProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSeletedProductActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnViewSeletedProduct)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtQuantity)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(chkOutStoke)
                                            .addGap(18, 18, 18)
                                            .addComponent(chkInStoke)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnBack))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtSearchByLikeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnSearch))))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkInStoke)
                    .addComponent(chkOutStoke)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSearchByLikeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewSeletedProduct)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchByLikeNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchByLikeNameMouseClicked
        txtSearchByLikeName.setText("");
    }//GEN-LAST:event_txtSearchByLikeNameMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchValue = txtSearchByLikeName.getText().trim();
        if (!searchValue.equals("") && (searchValue != null)) {
            ProductDAO dao = new ProductDAO();
            try {
                dao.searchProductByLikeName(searchValue);
                List<ProductDTO> result = dao.getListDTO();
                tblModelProduct.setRowCount(0);
                for (ProductDTO dto : result) {
                    tblModelProduct.addRow(dto.toVector(dto.getId()));
                }
            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Search process: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        inOrOut = "out";
        if(chkInStoke.isSelected()){
            inOrOut = "in";
        }
        if (productName.equals("")) {
            JOptionPane.showMessageDialog(this, "Select the product to add", "Select product process: ", HEIGHT);
        } else {
            try {
                int quantity = Integer.parseInt(txtQuantity.getText().trim());
                if (quantity > availableProduct && inOrOut.equals("out")) {
                    JOptionPane.showMessageDialog(this, "Invalid number of quantity!", "Select product process: ", HEIGHT);
                } else {
                    if (quantity < 0) {
                        JOptionPane.showMessageDialog(this, "Invalid number of quantity!", "Select product process: ", HEIGHT);
                    } else {
                        if (selectedProduct.containsKey(productName)) {
                            quantity = selectedProduct.get(productName) + quantity;
                        }
                        selectedProduct.put(productName, quantity);
                        JOptionPane.showMessageDialog(this, "Selected!", "Select product process: ", HEIGHT);
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid number of quantity!", "Select product process: ", HEIGHT);
            }
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        productName = (String) tblModelProduct.getValueAt(tblProduct.getSelectedRow(), 0);
        availableProduct = (int) tblModelProduct.getValueAt(tblProduct.getSelectedRow(), 3);
    }//GEN-LAST:event_tblProductMouseClicked

    private void btnViewSeletedProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSeletedProductActionPerformed
        inOrOut = "out";
        if (chkInStoke.isSelected()) {
            inOrOut = "in";
        }
        new ViewSelectedProduct(selectedProduct, inOrOut).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnViewSeletedProductActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new InventoryManagement().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewInventoryBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewInventoryBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewInventoryBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewInventoryBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewInventoryBill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnViewSeletedProduct;
    private javax.swing.ButtonGroup chkInOrOut;
    private javax.swing.JRadioButton chkInStoke;
    private javax.swing.JRadioButton chkOutStoke;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearchByLikeName;
    // End of variables declaration//GEN-END:variables
}
